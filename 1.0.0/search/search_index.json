{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"XTM Hub Documentation Space","text":"<p>Welcome to the XTM Hub Documentation space. Here you will be able to find all documents, meeting notes and presentations about the platform.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>XTM Hub is a central forum to access resources, share tradecraft, and optimize the use of Filigran\u2019s products, fostering collaboration and empowering the community.</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li> <p> Developer Guide</p> <p>Understand how to use the app.</p> <p> Explore</p> </li> </ul> <p>Need more help?</p> <p>We are doing our best to keep this documentation complete, accurate and up to date.</p> <p>If you still have questions or you find something which is not sufficiently explained, join the Filigran Community on Slack.</p>"},{"location":"#blog-posts","title":"Blog posts","text":"<ul> <li> <p> Resources and content</p> <p>Discover tutorials, best practices and deep dives on XTM Hub features on our Filigran blog.</p> <p> Read now</p> </li> </ul>"},{"location":"#additional-resources","title":"Additional resources","text":"<p>Below, you will find external resources which may be useful along your XTM Hub journey.</p> <p> Training Courses Training courses for analysts and administrators in the Filigran training center.</p> <p> Video materials Set of video illustrating the implementation of use cases and platform capabilities.</p> <p></p>"},{"location":"getting-started/","title":"Getting started - XTM Hub Development","text":"<p>This guide will help you quickly set up XTM Hub for local development and contribution.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you start, make sure you have the following installed:</p> <ul> <li>Node.js (v18 or higher, v23.6.0+ recommended)</li> <li>Yarn (v3.6.3 or higher)</li> <li>Docker and Docker Compose</li> <li>Git</li> </ul>"},{"location":"getting-started/#project-structure","title":"Project structure","text":"<p>XTM Hub is composed of three main packages:</p> <ul> <li><code>portal-api</code> - Backend API (Node.js + GraphQL + Apollo Server)</li> <li><code>portal-front</code> - Frontend (Next.js + React + Relay)</li> <li><code>portal-e2e-tests</code> - End-to-end tests (Playwright)</li> <li><code>xtm-hub-dev</code> - Development Docker Compose setup</li> </ul>"},{"location":"getting-started/#quick-setup","title":"Quick setup","text":""},{"location":"getting-started/#1-clone-the-repository","title":"1. Clone the repository","text":"<pre><code>git clone https://github.com/FiligranHQ/xtm-hub.git\ncd xtm-hub\n</code></pre>"},{"location":"getting-started/#2-configure-local-settings","title":"2. Configure local settings","text":"<p>Create a local configuration file at <code>portal-api/config/local.json</code>:</p> <pre><code>{\n  \"oidc_provider\": {\n    \"issuer\": \"https://your-auth-provider.com\",\n    \"client_id\": \"your-client-id\",\n    \"client_secret\": \"your-client-secret\",\n    \"redirect_uris\": [\"http://localhost:3002/auth/oidc/callback\"],\n    \"logout_callback_url\": [\"http://localhost:3002/oidc/callback\"],\n    \"response_types\": [\"code\"]\n  },\n  \"minio\": {\n    \"bucketName\": \"xtmhubbucket\",\n    \"region\": \"us-east-1\",\n    \"endpoint\": \"localhost\",\n    \"port\": 9002,\n    \"accessKeyId\": \"portal\",\n    \"secretAccessKey\": \"changeme\",\n    \"useSsl\": false\n  },\n  \"database\": {\n    \"host\": \"localhost\",\n    \"port\": 5434,\n    \"user\": \"portal\",\n    \"password\": \"portal-password\",\n    \"database\": \"cloud-portal\"\n  },\n  \"port\": 4002,\n  \"smtp_options\": {\n    \"host\": \"localhost\",\n    \"port\": 1025,\n    \"secure\": false,\n    \"from\": \"no-reply@localhost\"\n  }\n}\n</code></pre> <p>Note: For OIDC authentication, you'll need to configure your own identity provider or use a local development setup.</p>"},{"location":"getting-started/#3-start-development-environment","title":"3. Start development environment","text":"<p>The development environment requires three separate terminals:</p>"},{"location":"getting-started/#terminal-1-start-docker-services","title":"Terminal 1: Start docker services","text":"<pre><code>docker compose -f ./xtm-hub-dev/docker-compose.yml up\n</code></pre> <p>This starts: - PostgreSQL on port <code>5434</code> - MinIO on port <code>9002</code> (console on <code>8902</code>) - PgAdmin on port <code>8888</code> - MailPit on port <code>8025</code></p>"},{"location":"getting-started/#terminal-2-start-backend-server","title":"Terminal 2: Start backend server","text":"<pre><code>cd portal-api\nyarn install\nyarn build\nyarn start-dev\n</code></pre> <p>The API will be available at <code>http://localhost:4002</code></p>"},{"location":"getting-started/#terminal-3-start-frontend-server","title":"Terminal 3: Start frontend server","text":"<pre><code>cd portal-front\nyarn install\nyarn build\nyarn dev\n</code></pre> <p>The frontend will be available at <code>http://localhost:3002</code></p>"},{"location":"getting-started/#4-access-the-application","title":"4. Access the application","text":"<p>Once everything is running:</p> <ul> <li>Frontend: http://localhost:3002</li> <li>API: http://localhost:4002</li> <li>MinIO Console: http://localhost:8902</li> <li>PgAdmin: http://localhost:8888 (portal@filigran.io / portal-password)</li> <li>MailPit: http://localhost:8025</li> </ul>"},{"location":"getting-started/#development-workflow","title":"Development workflow","text":""},{"location":"getting-started/#api-development","title":"API development","text":"<ul> <li>Development mode: <code>yarn start-dev</code></li> <li>Run tests: <code>yarn test</code></li> <li>Database migrations: <code>yarn migrate:latest</code></li> <li>Generate types: <code>yarn generate-pg-to-ts &amp;&amp; yarn generate:ts</code></li> <li>Lint &amp; format: <code>yarn lint:fix &amp;&amp; yarn format</code></li> </ul>"},{"location":"getting-started/#frontend-development","title":"Frontend development","text":"<ul> <li>Development mode: <code>yarn dev</code></li> <li>Run tests: <code>yarn test</code></li> <li>Generate GraphQL types: <code>yarn relay</code></li> <li>Build: <code>yarn build</code></li> <li>Lint &amp; format: <code>yarn lint &amp;&amp; yarn format</code></li> </ul>"},{"location":"getting-started/#e2e-testing","title":"E2E testing","text":"<pre><code>cd portal-e2e-tests\nyarn install\n\n# Run E2E tests (make sure both API and frontend are running)\nyarn test:e2e\n\n# Run with UI\nyarn test:e2e:ui\n\n# Generate new tests\nyarn generate-test-e2e\n</code></pre> <p>Important: For E2E testing, start the API in test mode: <pre><code>cd portal-api\nyarn start-dev-e2e-test\n</code></pre></p>"},{"location":"getting-started/#contributing","title":"Contributing","text":""},{"location":"getting-started/#development-setup","title":"Development setup","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally</li> <li>Create a feature branch: <code>git checkout -b feature/my-feature</code></li> <li>Make your changes and test them</li> <li>Commit following the commit format below</li> <li>Push to your fork and create a Pull Request</li> </ol>"},{"location":"getting-started/#commit-format","title":"Commit format","text":"<p>All commit messages must follow this format:</p> <pre><code>[package] &lt;type&gt;(&lt;scope&gt;): Message (#issueNumber)\n</code></pre> <p>Types: <code>feat</code>, <code>fix</code>, <code>docs</code>, <code>refactor</code>, <code>chore</code>, <code>test</code> Packages: <code>backend</code>, <code>frontend</code>, <code>doc</code></p> <p>Examples: - <code>[frontend] feat(dashboard): add new card component (#123)</code> - <code>[backend] fix(auth): handle missing token (#456)</code></p>"},{"location":"getting-started/#testing","title":"Testing","text":"<p>Before submitting a PR, run all tests:</p> <pre><code># Backend tests\ncd portal-api\nyarn test:ci\n\n# Frontend tests\ncd portal-front\nyarn test:ci\n\n# E2E tests\ncd portal-e2e-tests\nyarn test:e2e\n</code></pre>"},{"location":"getting-started/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/#common-issues","title":"Common issues","text":"<ol> <li>Port conflicts: Ensure ports 3002, 4002, 5434, 8888, 9002, 8902, 8025, 1025 are available</li> <li>Docker issues: Verify Docker daemon is running and <code>docker-compose</code> is installed</li> <li>Build required: Both packages require <code>yarn build</code> before starting development servers</li> <li>MinIO credentials: Ensure <code>accessKeyId</code> and <code>secretAccessKey</code> in <code>local.json</code> match <code>docker-compose.yml</code></li> </ol>"},{"location":"getting-started/#reset-development-environment","title":"Reset development environment","text":"<pre><code># Stop and remove all containers\ndocker compose -f ./xtm-hub-dev/docker-compose.yml down -v\n\n# Restart services\ndocker compose -f ./xtm-hub-dev/docker-compose.yml up -d\n\n# Rebuild packages if needed\ncd portal-api &amp;&amp; yarn install &amp;&amp; yarn build\ncd ../portal-front &amp;&amp; yarn install &amp;&amp; yarn build\n</code></pre>"},{"location":"getting-started/#database-issues","title":"Database issues","text":"<pre><code># Reset database\ncd portal-api\nyarn clean-db-test\nyarn migrate:latest\n</code></pre>"},{"location":"getting-started/#package-manager-issues","title":"Package manager issues","text":"<p>If you're using an IDE like IntelliJ/WebStorm, make sure it's configured to use <code>yarn</code> instead of <code>npm</code> for running scripts.</p>"},{"location":"getting-started/#authentication-setup","title":"Authentication setup","text":"<p>For local development, you have a few options for OIDC authentication:</p> <ol> <li>Use a development auth provider (Auth0, Keycloak, etc.)</li> <li>Mock authentication for local testing</li> <li>Skip auth temporarily by modifying the local configuration</li> </ol> <p>Refer to the authentication documentation for detailed setup instructions.</p>"},{"location":"getting-started/#getting-help","title":"Getting help","text":"<ul> <li>Issues: GitHub Issues</li> <li>Beginner Issues: Good First Issues</li> <li>Community: Slack Channel</li> <li>Documentation: Official Docs</li> </ul> <p>Ready to contribute? Check out our beginner-friendly issues and contributing guide.</p>"}]}